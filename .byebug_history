continue
current_user.id
album.user.liked?(album.id, "Album")
album.user.liked?
album
continue
@albums  = Album.ransack(title_or_content_or_ingredient_cont: q).result
User.ransack(name_or_email_cont: q)
Album.ransack(title_or_content_ingredient_cont: q)
q = params[:search][:q]
title_or_content_ingredient_cont: q
q
@albums  = Album.ransack(title_or_content_ingredient_cont: q).result
@users = User.ransack(name_or_email_cont: q).result
 q = params[:search][:q]
params[:search].present?
params
continue
params
continue
params[:search]
params
continue
q = params[:search][:q]
q = params[:q]
params
continue
params[:id] == -1
params[:id]
params
continue
@albums
@album
@albums
continue
params
continue
Like.find_by_id(params[:id])
params[:id]
params[:like][:redirect]
params[:redirect]
params
continue
params
continue
(like.ids)
likes.ids.include?(like.ids)
likes.ids.include?(like.pluck :id)
like_ids.include?(like.pluck :id)
(like.pluck :id)
like_ids
like_ids.include?(like.pluck :id)
like = Like.where(likeable_id: id, likeable_type: type, user_id: id);
self
seld
user
continue
flash[:alert]
notice
flash
 devise_error_messages!
continue
 devise_error_messages!
continue
notice
 devise_error_messages!
continue
 devise_error_messages!
continue
 devise_error_messages!
continue
current_user.avatar.url
current_user.avatar
continue
params[:q]
params[:q]params[:q]params[:q]params[:q]
params
@liked_object.save
@liked_object.like_count +=1
@liked_object = Image.find_by_id(self.likeable_id)
self.likeable_type == 'Image'
continue
params
continue
params.require(:comment).permit(:commentable_id, :commentable_type, :content, :user_id)
params[:comment][:user_id] = current_user.id
params
params.require(:comment).permit(:commentable_id, :commentable_type, :content, :user_id)
params[:user_id] = current_user.id
current_user.id
continue
params[:images].count
params[:images][:image_url]
params[image_url]
params[:image_url]
params
